user nginx; # nginxのworkerプロセスの実行権限ユーザをnginxとする
worker_processes 1; # 動作させるnginxのworkerプロセスの数
error_log /var/log/nginx/error.log warn; # warnレベル以上のログを/var/log/nginx/error.logに出力
pid /run/nginx.pid; # masterプロセスのプロセスIDを保存するファイル

events {
  worker_connections 512; # 一つのworkerプロセスが同時に処理できる最大コネクション数をデフォルトの512とする
}

http {
  include /etc/nginx/mime.types; # MIMEタイプと拡張子のマッピングを設定するファイルを読み込む
  default_type application/octet-stream; # レスポンスのデフォルトのMIMEタイプをoctet-streamとする

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"'; # アクセスログの書式を定義
  access_log /var/log/nginx/access.log main; # アクセスログの出力先ファイルとログの書式を宣言
  sendfile on;
  tcp_nopush on;

  keepalive_timeout 65; # サーバ側でのキープアライブのタイムアウトの秒数をデフォルトの65秒とする

  server {
    listen 80 default_server; # 任意のIPv4アドレスの80番ポートでアクセスを受け付ける

    location /health_check {
      access_log off; # ヘルスチェックの結果はアクセスログへ出力しない
      # proxy_set_header Host healthcheck.localhost; # ヘルスチェックの場合はHostヘッダをhealthcheck.localhostとする
      proxy_pass http://localhost:8080/health_check;
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_read_timeout 300s;  
      proxy_pass http://localhost:8080;
    }
  }
}