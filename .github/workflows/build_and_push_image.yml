name: Build and Push Docker Images to ECR Repositories

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/role-github
          role-duration-seconds: 1800

      - run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - run: echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV

  build-web-image:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build and push Nginx image to ECR repository
        id: build-web-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/eks-web:$IMAGE_TAG -f ./build/web/Dockerfile .
          docker push $ECR_REGISTRY/eks-web:$IMAGE_TAG
  
  build-app-image:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build and push application image to ECR repository
        id: build-app-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/eks-app:$IMAGE_TAG -f ./build/app/Dockerfile.prod .
          docker push $ECR_REGISTRY/eks-app:$IMAGE_TAG

  build-migration-image:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build and push migration image to ECR repository
        id: build-app-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/eks-migration:$IMAGE_TAG -f ./build/migration/Dockerfile .
          docker push $ECR_REGISTRY/eks-migration:$IMAGE_TAG
